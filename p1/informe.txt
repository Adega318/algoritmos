Enrique Adega Fernandez - e.adega@udc.es // Antonio Buceta Paz - antonio.buceta@udc.es

Los datos del equipo utilizado para la medición de los tiempos de los algoritmos es la siguiente:

Máquina: 11th Gen Intel(R) Core(TM) i5-1135G7 @ 2.40GHz (RAM: 16.0GB)
SO: Nobara release 36 (Thirty Six) x86_64
Kernel: Linux lenovo 5.19.9-201.fsync.fc36.x86_64

>>INTRODUCCIÓN
En esta práctica utilizamos tres algoritmos para el cálculo de la sucesión de Fibonacci y los tiempos empleados de ejecución por cada uno.
Todas las mediciones de tiempo están tomadas en microsegundos.
En cada uno de los algoritmos también se calculará la ajustada, subestimada y sobreestimada para cada    n.

Para todos los algoritmos se hacen 5 mediciones; al primer algoritmo se le dan distintos valores q al resto, cabe destacar que si el tiempo es inferior a  500 microsegundos realizaremos la media de 1000 iteraciones. Las iteraciones marcadas con un '*' es una en la que se ha necesitado hacer la media de 1000 iteraciones*

>Para el primer algoritmo las mediciones empiezan con el valor n=2 y se duplica n en cada interaccion:
    
Fib 1:
           n           t(n)     t(n)/1.1^n      t(n)/Fi^n       t(n)/2^n

           2          0.020       0.016512       0.007632       0.004995  *
           4          0.061       0.041622       0.008891       0.003809  *
           8          0.474       0.220904       0.010080       0.001850  *
          16         22.143       4.818931       0.010033       0.000338  *
          32      41214.000    1951.995633       0.008461       0.000010   

    Cota subestimada: t(n)/1.1^n
    Cota ajustada: t(n)/((1+5^-2)/2)^n
    Cota sobreestimada: t(n)/2
    
    La cota ajustada tiende a: 0.008
    
>Para el segundo y el tercer algoritmo las mediciones empiezan en el valor n=1000 y se multiplica n por 10 en cada interaccion:

    >Segundo algoritmo:
        
Fib 2:
           n           t(n)     t(n)/n^0.8         t(n)/n  t(n)/n*log(n)

        1000          4.619       0.018390       0.004619       0.031910  *
       10000         46.913       0.029600       0.004691       0.043209  *
      100000        446.109       0.044611       0.004461       0.051360  *
     1000000       4827.000       0.076503       0.004827       0.066687   
    10000000      47192.000       0.118541       0.004719       0.076065   

    Cota subestimada: t(n)/n^0.8
    Cota ajustada: t(n)/n
    Cota sobreestimada: t(n)/n*log(n)
    
    La cota ajustada tiende a: 0.0046
        
           
    *El segundo algoritmo será necesario ejecutarlo varias veces, para dado que en ocasiones se produce un error de medición en el cual uno de los tiempos saldrá en negativo, la mostrada es la ejecución exitosa.*
                
        
    >Tercer algoritmo:
        
Fib 3:
           n           t(n) t(n)/rt log(n)    t(n)/log(n)     t(n)/n^0.5

        1000          0.094       0.035729       0.013594       0.002970  *
       10000          0.129       0.042464       0.013992       0.001289  *
      100000          0.153       0.045047       0.013276       0.000483  *
     1000000          0.184       0.049454       0.013305       0.000184  *
    10000000          0.224       0.055739       0.013884       0.000071  *
        
    Cota subestimada: t(n)/sqrt(log(n))
    Cota ajustada: t(n)/log(n)
    Cota sobreestimada: t(n)/n^0.5
    
    La cota ajustada tiende a: 0.013
        
>>Observaciones.
Al analizar las distintas cotas concluimos que la subestimada es creciente, la subestimada es decreciente y la ajustada es estable.

>>Conclusión.
Tras ver los tiempos de ejecución de los tres algoritmos llegamos a la conclusión de que el tercer algoritmo es el más eficiente, dado que es el que menor tiempo necesita para la ejecución de todas las mediciones y tiene la O de menor crecimiento, siendo logarítmica.

