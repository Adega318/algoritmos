Enrique Adega Fernandez - e.adega@udc.es // Antonio Buceta Paz - antonio.buceta@udc.es

>>Equipo utilizado
Máquina: 11th Gen Intel(R) Core(TM) i5-1135G7 @ 2.40GHz (RAM: 16.0GB)
SO: Nobara release 36 (Thirty Six) x86_64
Kernel: Linux lenovo 5.19.9-201.fsync.fc36.x86_64


>>Introducción
En la práctica se hace uso de dos algoritmos para la ordenación de vectores en tres estados, ascendente, descendente y aleatorios. El primer algoritmo utilizado es ordenación por inserción y el segundo es ordenación rápida con un umbral que indica el tamaño hasta el que se reducirá las divisiones del vector original antes de ejecutar el primer algoritmo para realizar la ordenación de esas divisiones.


>>Notas
Se probarán los algoritmos con 7 tamaños de vector, 500, 1000, 2000, 4000, 8000, 16000 y 32000.
En las pruebas del algoritmo de ordenación rápida se emplearán tres umbrales, 1, 10 y 100.
Las mediciones se hacen en microsegundos.
Cuando se detecte una ejecución con un tiempo menor de 500 microsegundos, se calculara la media de 1000 ejecuciones, indicado por “(*)” en las tablas.


>>Ordenación por inserción
|aleatorio:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|(*)     350.92000	| 0.00486477	| 0.00149368	| 0.00040502
|  1000	|       1385.00000	| 0.00551378	| 0.00148405	| 0.00034790
|  2000	|       5459.00000	| 0.00624107	| 0.00147253	| 0.00029843
|  4000	|      21870.00000	| 0.00718027	| 0.00148508	| 0.00026021
|  8000	|      85424.00000	| 0.00805412	| 0.00146026	| 0.00022120
| 16000	|     338102.00000	| 0.00915444	| 0.00145495	| 0.00019054
| 32000	|    1365468.00000	| 0.01061724	| 0.00147922	| 0.00016748

En el caso de la ordenación por inserción de un vector aleatorio, las cotas son las siguientes:
	Subestimada: n^1.8, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n^1.99, su cociente con los tiempos reales es estable con valores cercanos al 0.0014…
	Sobrestimada: n^2.2, su cociente con los tiempos reales es estrictamente decreciente.
 

|ascendente:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|(*)       3.74400	| 0.02595134	| 0.00748800	| 0.00216059
|  1000	|(*)       7.03600	| 0.02801082	| 0.00703600	| 0.00176736
|  2000	|(*)      14.01200	| 0.03203879	| 0.00700600	| 0.00153202
|  4000	|(*)      27.48200	| 0.03609112	| 0.00687050	| 0.00130791
|  8000	|(*)      56.69100	| 0.04276044	| 0.00708638	| 0.00117437
| 16000	|(*)     108.44200	| 0.04697876	| 0.00677762	| 0.00097781
| 32000	|(*)     217.74000	| 0.05417741	| 0.00680438	| 0.00085459

En el caso de la ordenación por inserción de un vector ascendente, las cotas son las siguientes:
	Subestimada: n^0.8, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n, su cociente con los tiempos reales es estable con valores cercanos al 0.007…
	Sobrestimada: n^1.2, su cociente con los tiempos reales es estrictamente decreciente.


|descendente:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|        644.00000	| 0.00892771	| 0.00257600	| 0.00074328
|  1000	|       2566.00000	| 0.01021543	| 0.00256600	| 0.00064455
|  2000	|      10742.00000	| 0.01228093	| 0.00268550	| 0.00058724
|  4000	|      43673.00000	| 0.01433854	| 0.00272956	| 0.00051961
|  8000	|     174134.00000	| 0.01641805	| 0.00272084	| 0.00045091
| 16000	|     684333.00000	| 0.01852898	| 0.00267318	| 0.00038566
| 32000	|    2712424.00000	| 0.02109054	| 0.00264885	| 0.00033268

En el caso de la ordenación por inserción de un vector descendente, las cotas son las siguientes:
	Subestimada: n^1.8, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n^2, su cociente con los tiempos reales es estable con valores cercanos al 0.0026…
	Sobrestimada: n^2.2, su cociente con los tiempos reales es estrictamente decreciente.


>>Ordenación rápida umbral: 1
|aleatorio:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|(*)      86.07100	| 0.17214200	| 0.02769957	| 0.00413528
|  1000	|(*)     188.33500	| 0.18833500	| 0.02726428	| 0.00298491
|  2000	|(*)     399.65800	| 0.19982900	| 0.02629017	| 0.00208949
|  4000	|        900.00000	| 0.22500000	| 0.02712788	| 0.00155220
|  8000	|       1986.00000	| 0.24825000	| 0.02762263	| 0.00112989
| 16000	|       4085.00000	| 0.25531250	| 0.02637432	| 0.00076666
| 32000	|       8555.00000	| 0.26734375	| 0.02577182	| 0.00052964

En el caso de la ordenación rápida de umbral 1 de un vector aleatorio, las cotas son las siguientes:
	Subestimada: n, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n*log(n), su cociente con los tiempos reales es estable con valores cercanos al 0.027…
	Sobrestimada: n^1.6, su cociente con los tiempos reales es estrictamente decreciente.


|ascendente:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|(*)      51.65400	| 0.10330800	| 0.01662341	| 0.00248172
|  1000	|(*)     109.68400	| 0.10968400	| 0.01587839	| 0.00173837
|  2000	|(*)     231.98400	| 0.11599200	| 0.01526029	| 0.00121286
|  4000	|(*)     480.90200	| 0.12022550	| 0.01449539	| 0.00082939
|  8000	|       1094.00000	| 0.13675000	| 0.01521609	| 0.00062241
| 16000	|       2051.00000	| 0.12818750	| 0.01324204	| 0.00038492
| 32000	|       4479.00000	| 0.13996875	| 0.01349293	| 0.00027729

En el caso de la ordenación rápida de umbral 1 de un vector ascendente, las cotas son las siguientes:
	Subestimada: n, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n*log(n), su cociente con los tiempos reales es estable con valores cercanos al 0.014…
	Sobrestimada: n^1.6, su cociente con los tiempos reales es estrictamente decreciente.


|descendente:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|(*)      52.38100	| 0.10476200	| 0.01685738	| 0.00251664
|  1000	|(*)     111.30900	| 0.11130900	| 0.01611363	| 0.00176413
|  2000	|(*)     231.37900	| 0.11568950	| 0.01522050	| 0.00120970
|  4000	|(*)     487.82300	| 0.12195575	| 0.01470401	| 0.00084133
|  8000	|       1064.00000	| 0.13300000	| 0.01479883	| 0.00060534
| 16000	|       2132.00000	| 0.13325000	| 0.01376501	| 0.00040012
| 32000	|       4726.00000	| 0.14768750	| 0.01423701	| 0.00029259

En el caso de la ordenación rápida de umbral 1 de un vector descendente, las cotas son las siguientes:
	Subestimada: n, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n*log(n), su cociente con los tiempos reales es estable con valores cercanos al 0.014…
	Sobrestimada: n^1.6, su cociente con los tiempos reales es estrictamente decreciente.


>>Ordenación rápida umbral: 10
|aleatorio:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|(*)      72.09600	| 0.14419200	| 0.02320211	| 0.00346385
|  1000	|(*)     167.20400	| 0.16720400	| 0.02420526	| 0.00265000
|  2000	|(*)     374.59300	| 0.18729650	| 0.02464135	| 0.00195845
|  4000	|        813.00000	| 0.20325000	| 0.02450552	| 0.00140215
|  8000	|       1728.00000	| 0.21600000	| 0.02403419	| 0.00098310
| 16000	|       3538.00000	| 0.22112500	| 0.02284268	| 0.00066400
| 32000	|       7868.00000	| 0.24587500	| 0.02370224	| 0.00048711

En el caso de la ordenación rápida de umbral 10 de un vector aleatorio, las cotas son las siguientes:
	Subestimada: n, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n*log(n), su cociente con los tiempos reales es estable con valores cercanos al 0.024…
	Sobrestimada: n^1.6, su cociente con los tiempos reales es estrictamente decreciente.


|ascendente:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|(*)      32.22700	| 0.06445400	| 0.01037137	| 0.00154835
|  1000	|(*)      71.18400	| 0.07118400	| 0.01030494	| 0.00112819
|  2000	|(*)     149.11400	| 0.07455700	| 0.00980897	| 0.00077960
|  4000	|(*)     327.58800	| 0.08189700	| 0.00987419	| 0.00056498
|  8000	|        670.00000	| 0.08375000	| 0.00931881	| 0.00038118
| 16000	|       1579.00000	| 0.09868750	| 0.01019463	| 0.00029634
| 32000	|       3158.00000	| 0.09868750	| 0.00951343	| 0.00019551

En el caso de la ordenación rápida de umbral 10 de un vector ascendente, las cotas son las siguientes:
	Subestimada: n, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n*log(n), su cociente con los tiempos reales es estable con valores cercanos al 0.010…
	Sobrestimada: n^1.6, su cociente con los tiempos reales es estrictamente decreciente.


|descendente:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|(*)      36.60100	| 0.07320200	| 0.01177902	| 0.00175849
|  1000	|(*)      79.72900	| 0.07972900	| 0.01154195	| 0.00126362
|  2000	|(*)     167.10500	| 0.08355250	| 0.01099244	| 0.00087366
|  4000	|(*)     366.71900	| 0.09167975	| 0.01105368	| 0.00063247
|  8000	|        824.00000	| 0.10300000	| 0.01146075	| 0.00046880
| 16000	|       1656.00000	| 0.10350000	| 0.01069177	| 0.00031079
| 32000	|       3441.00000	| 0.10753125	| 0.01036597	| 0.00021303

En el caso de la ordenación rápida de umbral 10 de un vector descendente, las cotas son las siguientes:
	Subestimada: n, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n*log(n), su cociente con los tiempos reales es estable con valores cercanos al 0.011…
	Sobrestimada: n^1.6, su cociente con los tiempos reales es estrictamente decreciente.


>>Ordenación rápida umbral: 100
|aleatorio:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|(*)      82.06300	| 0.16412600	| 0.02640971	| 0.00394271
|  1000	|(*)     179.79900	| 0.17979900	| 0.02602857	| 0.00284962
|  2000	|(*)     391.35800	| 0.19567900	| 0.02574418	| 0.00204610
|  4000	|        861.00000	| 0.21525000	| 0.02595234	| 0.00148493
|  8000	|       1911.00000	| 0.23887500	| 0.02657948	| 0.00108722
| 16000	|       3871.00000	| 0.24193750	| 0.02499266	| 0.00072649
| 32000	|       8258.00000	| 0.25806250	| 0.02487711	| 0.00051125

En el caso de la ordenación rápida de umbral 100 de un vector aleatorio, las cotas son las siguientes:
	Subestimada: n, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n*log(n), su cociente con los tiempos reales es estable con valores cercanos al 0.025…
	Sobrestimada: n^1.6, su cociente con los tiempos reales es estrictamente decreciente.


|ascendente:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|(*)      14.49400	| 0.02898800	| 0.00466449	| 0.00069636
|  1000	|(*)      35.93300	| 0.03593300	| 0.00520183	| 0.00056950
|  2000	|(*)      89.31100	| 0.04465550	| 0.00587503	| 0.00046694
|  4000	|(*)     212.29900	| 0.05307475	| 0.00639914	| 0.00036614
|  8000	|(*)     439.93300	| 0.05499163	| 0.00611889	| 0.00025029
| 16000	|        921.00000	| 0.05756250	| 0.00594633	| 0.00017285
| 32000	|       2236.00000	| 0.06987500	| 0.00673592	| 0.00013843

En el caso de la ordenación rápida de umbral 100 de un vector ascendente, las cotas son las siguientes:
	Subestimada: n, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n*log(n), su cociente con los tiempos reales es estable con valores cercanos al 0.006…
	Sobrestimada: n^1.6, su cociente con los tiempos reales es estrictamente decreciente.


|descendente:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|(*)      22.18500	| 0.04437000	| 0.00713963	| 0.00106588
|  1000	|(*)      45.73000	| 0.04573000	| 0.00662010	| 0.00072477
|  2000	|(*)     100.04400	| 0.05002200	| 0.00658106	| 0.00052305
|  4000	|(*)     226.21100	| 0.05655275	| 0.00681847	| 0.00039014
|  8000	|(*)     489.88500	| 0.06123563	| 0.00681365	| 0.00027871
| 16000	|       1112.00000	| 0.06950000	| 0.00717950	| 0.00020870
| 32000	|       2330.00000	| 0.07281250	| 0.00701909	| 0.00014425

En el caso de la ordenación rápida de umbral 100 de un vector descendente, las cotas son las siguientes:
	Subestimada: n, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n*log(n), su cociente con los tiempos reales es estable con valores cercanos al 0.006…
	Sobrestimada: n^1.6, su cociente con los tiempos reales es estrictamente decreciente.


>>Observaciones

Con respecto a la ordenación por inserción, observando las ordenaciones de los vectores descendente y aleatorio, podemos asumir n^1.98 como la complejidad, reduciéndose a n para el caso ascendente.

Con respecto a la ordenación rápida observamos complejidades de n*log(n).


>>Conclusiones

Observando los tiempos de ejecución en función del vector proporcionado, podemos observar que para el de inserción los tiempos de ordenación en función del tiempo son, ascendente, aleatorio y descendente, siendo el aleatorio el más rápido con una amplia diferencia. Por otro lado, el algoritmo de ordenación rápida tiene como más rápido el descendente, con una diferencia mínima, el ascendente y por último, como el más lento, el aleatorio.

Comparando los tiempos de ejecución de ambos algoritmos, podemos concluir que el de ordenación rápida es más eficiente que el de ordenación por inserción, a excepción del caso de la ordenación de un vector ya ordenado donde el de inserción reporta menores tiempos.

El algoritmo de ordenación rápida podemos obtener el mejor rendimiento para el vector aleatorio con un umbral 10 y para un vector ascendente y descendente con un umbral 100. Lo que nos lleva a la conclusión que para vectores descendentes y ascendentes es ventajoso aprovechar la ordenación por inserción en gran medida, cuando para un vector aleatorio el uso de un umbral de 100 reporta tiempos similares al uso de un umbral de 1. Lo que nos indica que en vectores aleatorios la inserción se debe mantener en valores bajos, siendo el umbral 10 el que retorna mejores valores en las pruebas.


