Enrique Adega Fernandez - e.adega@udc.es // Antonio Buceta Paz - antonio.buceta@udc.es

>>Equipo utilizado
Máquina: 11th Gen Intel(R) Core(TM) i5-1135G7 @ 2.40GHz (RAM: 16.0GB)
SO: Nobara release 36 (Thirty Six) x86_64
Kernel: Linux lenovo 5.19.9-201.fsync.fc36.x86_64


>>Introducción
Esta práctica consiste en la medición de tiempos de dos algoritos de ordenación en diferentes casos iniciales y
el cálculo de las cotas con el coeficiente respecto al tiempo. Los diferentes casos iniciales del vector a
ordenar son ascendente, descendente y aleatorio.
Los algoritmos utilizados son la ordenación por inserción y ordenación rapida. La ordenación rapida hace uso de
la ordenación por inserción para realizar la ordenación final de los vectores, esto es controlado por el valor
umbral.


>>Notas
Se probarán los algoritmos con 7 tamaños de vector: 500, 1000, 2000, 4000, 8000, 16000 y 32000.
En las pruebas del algoritmo de ordenación rápida se emplearán tres umbrales: 1, 10 y 100.
Las mediciones se hacen en microsegundos.
Cuando se detecte una ejecución con un tiempo menor de 500 microsegundos, se calculará la media de 1000
ejecuciones, indicado por “(*)” en las tablas.


>>Ordenación por inserción
|aleatorio:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|(*)     350.92000	| 0.00486477	| 0.00149368	| 0.00040502
|  1000	|       1385.00000	| 0.00551378	| 0.00148405	| 0.00034790
|  2000	|       5459.00000	| 0.00624107	| 0.00147253	| 0.00029843
|  4000	|      21870.00000	| 0.00718027	| 0.00148508	| 0.00026021
|  8000	|      85424.00000	| 0.00805412	| 0.00146026	| 0.00022120
| 16000	|     338102.00000	| 0.00915444	| 0.00145495	| 0.00019054
| 32000	|    1365468.00000	| 0.01061724	| 0.00147922	| 0.00016748

En el caso de la ordenación por inserción de un vector aleatorio, las cotas son las siguientes:
	Subestimada: n^1.8, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n^1.99, su cociente con los tiempos reales es estable con valores cercanos al 0.0014…
	Sobrestimada: n^2.2, su cociente con los tiempos reales es estrictamente decreciente.
 

|ascendente:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|(*)       3.74400	| 0.02595134	| 0.00748800	| 0.00216059
|  1000	|(*)       7.03600	| 0.02801082	| 0.00703600	| 0.00176736
|  2000	|(*)      14.01200	| 0.03203879	| 0.00700600	| 0.00153202
|  4000	|(*)      27.48200	| 0.03609112	| 0.00687050	| 0.00130791
|  8000	|(*)      56.69100	| 0.04276044	| 0.00708638	| 0.00117437
| 16000	|(*)     108.44200	| 0.04697876	| 0.00677762	| 0.00097781
| 32000	|(*)     217.74000	| 0.05417741	| 0.00680438	| 0.00085459

En el caso de la ordenación por inserción de un vector ascendente, las cotas son las siguientes:
	Subestimada: n^0.8, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n, su cociente con los tiempos reales es estable con valores cercanos al 0.007…
	Sobrestimada: n^1.2, su cociente con los tiempos reales es estrictamente decreciente.


|descendente:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|        644.00000	| 0.00892771	| 0.00257600	| 0.00074328
|  1000	|       2566.00000	| 0.01021543	| 0.00256600	| 0.00064455
|  2000	|      10742.00000	| 0.01228093	| 0.00268550	| 0.00058724
|  4000	|      43673.00000	| 0.01433854	| 0.00272956	| 0.00051961
|  8000	|     174134.00000	| 0.01641805	| 0.00272084	| 0.00045091
| 16000	|     684333.00000	| 0.01852898	| 0.00267318	| 0.00038566
| 32000	|    2712424.00000	| 0.02109054	| 0.00264885	| 0.00033268

En el caso de la ordenación por inserción de un vector descendente, las cotas son las siguientes:
	Subestimada: n^1.8, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n^1.99, su cociente con los tiempos reales es estable con valores cercanos al 0.0026…
	Sobrestimada: n^2.2, su cociente con los tiempos reales es estrictamente decreciente.


>>Ordenación rápida umbral: 1
|aleatorio:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|(*)      83.43700	| 0.16687400	| 0.08423682	| 0.02586412
|  1000	|(*)     182.56300	| 0.18256300	| 0.08539113	| 0.02298332
|  2000	|(*)     381.20900	| 0.19060450	| 0.08260757	| 0.01949055
|  4000	|        871.00000	| 0.21775000	| 0.08744431	| 0.01808590
|  8000	|       1886.00000	| 0.23575000	| 0.08772266	| 0.01590467
| 16000	|       3929.00000	| 0.24556250	| 0.08466596	| 0.01345631
| 32000	|       8585.00000	| 0.26828125	| 0.08570849	| 0.01194113

En el caso de la ordenación rápida de umbral 1 de un vector aleatorio, las cotas son las siguientes:
	Subestimada: n, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n^1.11, su cociente con los tiempos reales es estable con valores cercanos al 0.086…
	Sobrestimada: n^1.6, su cociente con los tiempos reales es estrictamente decreciente.


|ascendente:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|(*)      50.49300	| 0.10098600	| 0.05772366	| 0.01565201
|  1000	|(*)     101.82000	| 0.10182000	| 0.05468058	| 0.01281838
|  2000	|(*)     216.87800	| 0.10843900	| 0.05471329	| 0.01108859
|  4000	|(*)     454.43400	| 0.11360850	| 0.05385493	| 0.00943611
|  8000	|       1039.00000	| 0.12987500	| 0.05784255	| 0.00876191
| 16000	|       2032.00000	| 0.12700000	| 0.05314139	| 0.00695933
| 32000	|       4303.00000	| 0.13446875	| 0.05286374	| 0.00598517

En el caso de la ordenación rápida de umbral 1 de un vector ascendente, las cotas son las siguientes:
	Subestimada: n, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n^1.09, su cociente con los tiempos reales es estable con valores cercanos al 0.055…
	Sobrestimada: n^1.6, su cociente con los tiempos reales es estrictamente decreciente.


|descendente:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|(*)      50.66100	| 0.10132200	| 0.06162915	| 0.01570409
|  1000	|(*)     104.72600	| 0.10472600	| 0.06026352	| 0.01318422
|  2000	|(*)     218.56500	| 0.10928250	| 0.05949332	| 0.01117485
|  4000	|(*)     465.63900	| 0.11640975	| 0.05995488	| 0.00966877
|  8000	|       1022.00000	| 0.12775000	| 0.06224632	| 0.00861854
| 16000	|       2146.00000	| 0.13412500	| 0.06182728	| 0.00734977
| 32000	|       4591.00000	| 0.14346875	| 0.06256700	| 0.00638576

En el caso de la ordenación rápida de umbral 1 de un vector descendente, las cotas son las siguientes:
	Subestimada: n, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n^1.08, su cociente con los tiempos reales es estable con valores cercanos al 0.061…
	Sobrestimada: n^1.6, su cociente con los tiempos reales es estrictamente decreciente.


>>Ordenación rápida umbral: 10
|aleatorio:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|(*)      73.16900	| 0.14633800	| 0.06941938	| 0.02268120
|  1000	|(*)     162.43200	| 0.16243200	| 0.07090414	| 0.02044898
|  2000	|(*)     347.30300	| 0.17365150	| 0.06975172	| 0.01775700
|  4000	|        702.00000	| 0.17550000	| 0.06486791	| 0.01457670
|  8000	|       1631.00000	| 0.20387500	| 0.06934149	| 0.01375425
| 16000	|       3375.00000	| 0.21093750	| 0.06601755	| 0.01155893
| 32000	|       7470.00000	| 0.23343750	| 0.06722838	| 0.01039024

En el caso de la ordenación rápida de umbral 10 de un vector aleatorio, las cotas son las siguientes:
	Subestimada: n, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n^1.12, su cociente con los tiempos reales es estable con valores cercanos al 0.069…
	Sobrestimada: n^1.6, su cociente con los tiempos reales es estrictamente decreciente.


|ascendente:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|(*)      31.19800	| 0.06239600	| 0.02959923	| 0.00967087
|  1000	|(*)      67.22300	| 0.06722300	| 0.02934390	| 0.00846287
|  2000	|(*)     142.08200	| 0.07104100	| 0.02853550	| 0.00726441
|  4000	|(*)     305.27800	| 0.07631950	| 0.02820904	| 0.00633895
|  8000	|        681.00000	| 0.08512500	| 0.02895252	| 0.00574289
| 16000	|       1508.00000	| 0.09425000	| 0.02949762	| 0.00516470
| 32000	|       3081.00000	| 0.09628125	| 0.02772833	| 0.00428545

En el caso de la ordenación rápida de umbral 10 de un vector ascendente, las cotas son las siguientes:
	Subestimada: n, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n^1.12, su cociente con los tiempos reales es estable con valores cercanos al 0.029…
	Sobrestimada: n^1.6, su cociente con los tiempos reales es estrictamente decreciente.


|descendente:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|(*)      34.04000	| 0.06808000	| 0.03436631	| 0.01055185
|  1000	|(*)      74.10000	| 0.07410000	| 0.03465917	| 0.00932864
|  2000	|(*)     158.25100	| 0.07912550	| 0.03429282	| 0.00809110
|  4000	|(*)     333.10100	| 0.08327525	| 0.03344178	| 0.00691668
|  8000	|        667.00000	| 0.08337500	| 0.03102387	| 0.00562482
| 16000	|       1550.00000	| 0.09687500	| 0.03340093	| 0.00530855
| 32000	|       3382.00000	| 0.10568750	| 0.03376425	| 0.00470412

En el caso de la ordenación rápida de umbral 10 de un vector descendente, las cotas son las siguientes:
	Subestimada: n, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n^1.11, su cociente con los tiempos reales es estable con valores cercanos al 0.034…
	Sobrestimada: n^1.6, su cociente con los tiempos reales es estrictamente decreciente.


>>Ordenación rápida umbral: 100
|aleatorio:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|(*)      85.40300	| 0.17080600	| 0.08622167	| 0.02647355
|  1000	|(*)     186.06700	| 0.18606700	| 0.08703007	| 0.02342445
|  2000	|(*)     386.31900	| 0.19315950	| 0.08371490	| 0.01975182
|  4000	|        872.00000	| 0.21800000	| 0.08754471	| 0.01810667
|  8000	|       1856.00000	| 0.23200000	| 0.08632729	| 0.01565168
| 16000	|       3969.00000	| 0.24806250	| 0.08552792	| 0.01359331
| 32000	|       8609.00000	| 0.26903125	| 0.08594809	| 0.01197451

En el caso de la ordenación rápida de umbral 100 de un vector aleatorio, las cotas son las siguientes:
	Subestimada: n, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n^1.11, su cociente con los tiempos reales es estable con valores cercanos al 0.085…
	Sobrestimada: n^1.6, su cociente con los tiempos reales es estrictamente decreciente.


|ascendente:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|(*)      14.30000	| 0.02860000	| 0.00775501	| 0.00443277
|  1000	|(*)      35.11900	| 0.03511900	| 0.00823270	| 0.00442122
|  2000	|(*)      83.64300	| 0.04182150	| 0.00847585	| 0.00427652
|  4000	|(*)     189.31000	| 0.04732750	| 0.00829241	| 0.00393093
|  8000	|(*)     413.62700	| 0.05170338	| 0.00783195	| 0.00348812
| 16000	|        990.00000	| 0.06187500	| 0.00810308	| 0.00339062
| 32000	|       2048.00000	| 0.06400000	| 0.00724600	| 0.00284862

En el caso de la ordenación rápida de umbral 100 de un vector ascendente, las cotas son las siguientes:
	Subestimada: n, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n^1.21, su cociente con los tiempos reales es estable con valores cercanos al 0.080…
	Sobrestimada: n^1.6, su cociente con los tiempos reales es estrictamente decreciente.


|descendente:
|n:	|t(n)			|subestimada	|ajustada	|sobrestimada
|   500	|(*)      21.34800	| 0.04269600	| 0.01788675	| 0.00661753
|  1000	|(*)      45.06000	| 0.04506000	| 0.01713133	| 0.00567272
|  2000	|(*)      98.03000	| 0.04901500	| 0.01691160	| 0.00501210
|  4000	|(*)     205.81100	| 0.05145275	| 0.01611091	| 0.00427357
|  8000	|(*)     457.94900	| 0.05724362	| 0.01626652	| 0.00386189
| 16000	|       1294.00000	| 0.08087500	| 0.02085631	| 0.00443178
| 32000	|       2539.00000	| 0.07934375	| 0.01856914	| 0.00353157

En el caso de la ordenación rápida de umbral 100 de un vector descendente, las cotas son las siguientes:
	Subestimada: n, su cociente con los tiempos reales presenta estrictamente crecimiento.
	Ajustada: n^1.14, su cociente con los tiempos reales es estable con valores cercanos al 0.017…
	Sobrestimada: n^1.6, su cociente con los tiempos reales es estrictamente decreciente.


>>Observaciones

Con respecto a la ordenación por inserción, observando las ordenaciones de los vectores descendente y aleatorio,
podemos asumir n^1.99 como la complejidad, reduciéndose a n para el caso ascendente.

Con respecto a la ordenación rápida observamos complejidades dependiente del umbral y caso inicial del vector:
|umbral |Aleatoria |Acendente |Descendente
|     1 |   n^1.11 |   n^1.09 |     n^1.08
|    10 |   n^1.12 |   n^1.12 |     n^1.11
|   100 |   n^1.11 |   n^1.21 |     n^1.14


>>Conclusiones

Fijándonos en los tiempos de ordenación del algoritmo de inserción en función de los casos iniciales vemos que
el ascendente el más rápido con una amplia diferencia, seguido del aleatorio y descendente respectivamente. Con
respecto a la cota ajustada del algoritmo, en función del caso inicial obtenemos n^1.99 para aleatorio y
descendente y obtenemos n para ascendente, si comparamos la complejidad teórica de n^2 con n^1.99 vemos una
diferencia mínima, que se hace acentuada al ver el caso inicial ascendente de complejidad n.


Con respecto a la ordenación rápida vemos la velocidad de los casos variar con el umbral, pero se mantienen las
relaciones entre ellos con el caso más rápido, siendo el ascendente seguido de descendente y por último
aleatorio.
Fijándonos en los efectos del umbral sobre los tiempos, vemos que para mayores umbrales los tiempos de los casos
ascendente y descendente mejoran cuando, por otra parte, el caso aleatorio obtiene su mejor tiempo con umbral
10, perdiendo eficiencia con umbral 1 y 100.
Con respecto a las cotas del algoritmo podemos diferenciarlas significativamente por umbral y caso inicial. Si
nos fijamos en la cota en función del umbral podemos ver que los casos iniciales Ascendente y Descendente tienen
gran variación en función del umbral cuando Aleatorio es estable con una cota de n^1.11, cabe mencionar el caso
del umbral 10 donde la cota tiende a n^1.12 para todos los casos iniciales. Sí, nos fijamos, por lo contrario,
en los casos iniciales vemos que las mayores cotas las obtiene Ascendete seguidos de Aleatorio y descendente. En
le caso de dar una cota ajustada única se debería de dar una en trono a los n^1.12 siendo un valor medio que da
una cota adecuada más adecuada, lo que diferencia sustancialmente de la nlog(n) teórica.
