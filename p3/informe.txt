Enrique Adega Fernandez - e.adega@udc.es // Antonio Buceta Paz - antonio.buceta@udc.es

>>Equipo utilizado
Máquina: 11th Gen Intel(R) Core(TM) i5-1135G7 @ 2.40GHz (RAM: 16.0GB)
SO: Nobara release 36 (Thirty Six) x86_64
Kernel: Linux lenovo 5.19.9-201.fsync.fc36.x86_64


>>Introducción
La práctica consiste en la medición de tiempos y costas de la inserción y búsqueda de n elementos aleatorios en
un árbol.


>>Notas
Se probarán los algoritmos con 6 tamaños de vector: 8000, 16000, 32000, 64000, 128000 y 256000.
Las mediciones se hacen en microsegundos.
Cuando se detecte una ejecución con un tiempo menor de 500 microsegundos, se consideraran tiempos no fiables y
pondrá un indicador “*” en las tablas. Estos valores solo parecerán en la primera tabla y en caso de la
aparición de uno de ellos en solo en inserción o búsqueda se considerará inadecuado el otro pese a superar 500
milisegundos.

>>Insercion y busqieda de n elementos:
|n       |t_ins(n)  |t_bus(n)
|    500 | *    107 | *    122
|   1000 | *    257 | *    283
|   2000 |      638 |      665
|   4000 |     1331 |     1510
|   8000 |     3310 |     3612
|  16000 |     7187 |     7672
|  32000 |    18446 |    18628
|  64000 |    41025 |    49662
| 128000 |   111918 |   124192
| 256000 |   264737 |   288635

Insercion de n elementos:
|n       |t(n)       |t(n)/n      |t(n)/n^1.24 |t(n)/n^1.55
|   2000 |    638.00 | 0.31900000 | 0.05146873 | 0.00487780
|   4000 |   1331.00 | 0.33275000 | 0.04545940 | 0.00347524
|   8000 |   3310.00 | 0.41375000 | 0.04786261 | 0.00295147
|  16000 |   7187.00 | 0.44918750 | 0.04399860 | 0.00218858
|  32000 |  18446.00 | 0.57643750 | 0.04780972 | 0.00191831
|  64000 |  41025.00 | 0.64101562 | 0.04501792 | 0.00145703
| 128000 | 111918.00 | 0.87435938 | 0.05199476 | 0.00135745
| 256000 | 264737.00 | 1.03412891 | 0.05207114 | 0.00109659

Busqueda de n elementos:
|n       |t(n)       |t(n)/n      |t(n)/n^1.25 |t(n)/n^1.55
|   2000 |    665.00 | 0.33250000 | 0.04972035 | 0.00508423
|   4000 |   1510.00 | 0.37750000 | 0.04746811 | 0.00394261
|   8000 |   3612.00 | 0.45150000 | 0.04774031 | 0.00322076
|  16000 |   7672.00 | 0.47950000 | 0.04263425 | 0.00233627
|  32000 |  18628.00 | 0.58212500 | 0.04352400 | 0.00193724
|  64000 |  49662.00 | 0.77596875 | 0.04878645 | 0.00176378
| 128000 | 124192.00 | 0.97025000 | 0.05129572 | 0.00150632
| 256000 | 288635.00 | 1.12748047 | 0.05012438 | 0.00119558

En el caso de la inserción de n elementos, las cotas son las siguientes:
    Subestimada: n, su cociente con los tiempos reales presenta estrictamente crecimiento.
    Ajustada: n^1.24, su cociente con los tiempos reales tiende al valor de 0.05…
    Sobrestimada: n^1.55, su cociente con los tiempos reales es estrictamente decreciente.

En el caso de la búsqueda de n elementos, las cotas son las siguientes:
    Subestimada: n, su cociente con los tiempos reales presenta estrictamente crecimiento.
    Ajustada: n^1.25, su cociente con los tiempos reales tiende al valor de 0.05…
    Sobrestimada: n^1.55, su cociente con los tiempos reales es estrictamente decreciente.


>>Observaciones

Con respecto a la inserción de n elementos aleatorios, consideramos la ajustada n^1.24.
Con respecto a la búsqueda de n elementos aleatorios, consideramos la ajustada n^1.25.


>>Conclusiones

Fijándonos en ambas complejidades podemos concluir una menor complejidad para la inserción que la búsqueda.
Lo que se puede ver en las diferencias de tiempo entre ambas y cus complejidades calculadas.

